@using System.Security.Claims
@using Bll.Dtos.ApiDto
@using Newtonsoft.Json
@using System.Web
@model ProductDetailsViewModel
@inject AutoMapper.IMapper Mapper
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer


@section ProductDetailsStyle {

    <link href="~/css/ProductDetails.css" rel="stylesheet" />


}

<div>
    <p>@Model.Product.Title</p>
    <section class="product-details">
        <div class="gallery-info">
            <div class="gallery">
                <div id="mainMedia" class="main-image">
                    <img src="@Model.Product.MainPictureUrl" alt="Alternate Text" style="width: 100%; height: 100%; object-fit: cover;" />
                </div>
                <div class="thumbnails" id="thumbnails">
                    <!-- Video as the first thumbnail -->
                    @if (Model.Product.Videos != null && Model.Product.Videos.Any())
                    {
                        <video src="@(Model.Product.Videos.First().Url ?? "not null" )" alt="Video Thumbnail" class="thumbnail active" controls muted loop></video>



                    }


                    @foreach (var item in Model.Product.Pictures)
                    {

                        <img src="@item.Url"
                             alt="Thumbnail 2" class="thumbnail">


                    }
                </div>
                <div class="controls">
                    <button id="next">Next &#9654;</button>
                    <button id="prev">&#9664; Previous</button>
                </div>
            </div>
        </div>
        <div class="product-page">

            <table class="info-product">


                <tr>
                    <th>@Localizer["PricePerPiece"]</th>
                    <td class="d-flex gap-4">
                        @Model.Product.Price.ConvertedPriceList.Internal.Price SAR
                    </td>
                </tr>

                <tr>
                    <th>@Localizer["RealWeight"]</th>
                    <td class="d-flex gap-4">
                        @Model.Product.PhysicalParameters.Weight Kg
                    </td>
                </tr>

                @foreach (var item in Model.Product.FeaturedValues)
                {

                    @switch (item.Name)
                    {
                        case "SalesInLast30Days":
                            <tr>
                                <th>@Localizer["SalesInLast30Days"]:</th>
                                <td class="d-flex gap-4">
                                    @item.Value
                                </td>
                            </tr>
                            break;

                        case "TotalSales":
                            <tr>
                                <th>@Localizer["TotalSales"]:</th>
                                <td class="d-flex gap-4">
                                    @item.Value
                                </td>
                            </tr>
                            break;

                        case "rating":
                            <tr>
                                <th>@Localizer["Rating"]:</th>
                                <td class="d-flex gap-4">
                                    @item.Value
                                </td>
                            </tr>
                            break;
                    }

                }

                @{
                    var listOfAttributes = new List<string>();

                    if (Model.Product.ConfiguredItems != null)
                    {
                        listOfAttributes = Model.Product.ConfiguredItems
                        .SelectMany(p => p.Configurators.Select(e => e.Pid))
                        .Distinct()
                        .ToList();
                    }
                    // list of attbutes
                }

                @if (listOfAttributes.Count == 1)
                {
                    @foreach (var key in listOfAttributes)
                    {
                        <tr data-ismorerelation="false" class="Container_To_Attrbutes">
                            <th>@Model.Product.Attributes.FirstOrDefault(e => e.Pid == key)?.PropertyName</th>

                            <td>
                                <table id="sizeTable" class="size-table">
                                    <tbody>
                                        @foreach (var item in Model.Product.Attributes.Where(e => e.Pid == key).Select((value, index) => new { value, index }))
                                        {
                                            var sanitizedValue = item.value.PropertyName;
                                            <tr class="size-row @(item.index >= 5 ? "hidden" : "")">
                                                <td>
                                                    @if (!string.IsNullOrEmpty(item.value.ImageUrl))
                                                    {
                                                        <img src="@item.value.ImageUrl" alt="@item.value.Value" class="img-product" />
                                                    }
                                                    else
                                                    {
                                                        <span>@item.value.Value</span>
                                                    }
                                                </td>
                                                <td>
                                                    <button class="quantity-btn"
                                                            onclick="adjustQuantity('@(sanitizedValue)','@(item.value.Value)','@item.value.Pid','@item.value.Vid','@(sanitizedValue)_@(item.index)', -1)"
                                                            data-item-id="@(sanitizedValue)_@(item.index)"
                                                            data-price="@Model.Product.Price.ConvertedPriceList.Internal.Price">
                                                        -
                                                    </button>
                                                    <span class="quantity-value" id="quantity_@(sanitizedValue)_@(item.index)">0</span>
                                                    <button class="quantity-btn"
                                                            onclick="adjustQuantity('@(sanitizedValue)','@(item.value.Value)','@item.value.Pid','@item.value.Vid','@(sanitizedValue)_@(item.index)',1)"
                                                            data-item-id="@(sanitizedValue)_@(item.index)"
                                                            data-price="@Model.Product.Price.ConvertedPriceList.Internal.Price">
                                                        +
                                                    </button>
                                                </td>
                                            </tr>
                                        }

                                        <tr id="showMoreRow">
                                            <td>
                                                <button id="showMoreBtn">إظهار المزيد</button>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>

                                <div class="total-price-container">
                                    <p>@Localizer["TotalPrice"]:<span id="totalPrice">0.00</span> SAR</p>
                                </div>
                            </td>
                        </tr>
                    }
                }

                @if (listOfAttributes.Count > 1)
                {
                    @foreach (var attr in listOfAttributes.Select((Value, index) => (Value, index)))
                    {
                        if ((attr.index + 1) % 2 != 0)
                        {
                            <tr data-ismorerelation="true" class="Container_To_Attrbutes">
                                <th>@Model.Product.Attributes.FirstOrDefault(e => e.Pid == attr.Value)?.PropertyName</th>
                                <td>
                                    <div class="colors_cards">
                                        @foreach (var item in Model.Product.Attributes.Where(p => p.Pid == attr.Value).Select((value, index) => new { value, index }))
                                        {
                                            var sanitizedValue = item.value.PropertyName;

                                            var objectData = new Dictionary<string, string>
                            {
                            { "key",$"{item.value.PropertyName}"},
                            { "Value",$"{item.value.Value}"},
                            { "Pid",$"{item.value.Pid}"},
                            {"Vid",$"{item.value.Vid}" }

                            }
                                            ;

                                            <div class="cards @(item.index==0?"active-border":"")" data-valuetoactiveCard="@Html.Raw(JsonConvert.SerializeObject(objectData).Replace("\"", "&quot;"))">
                                                <div class="image-container-cutome">
                                                    @if (!string.IsNullOrEmpty(item.value.ImageUrl))
                                                    {
                                                        <img src="@item.value.ImageUrl" alt="@item.value.Value" class="img-product" />
                                                    }
                                                    else
                                                    {
                                                        <span>@item.value.Value</span>
                                                    }
                                                    <p class="tooltip-custom">@item.value.Value</p>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr data-ismorerelation="true" class="Container_To_Attrbutes">
                                <th>@Model.Product.Attributes.FirstOrDefault(e => e.Pid == attr.Value)?.PropertyName</th>
                                @* zise *@

                                <td>
                                    <table id="sizeTable" class="size-table">
                                        <tbody>
                                            @foreach (var item in Model.Product.Attributes.Where(e => e.Pid == attr.Value).Select((value, index) => new { value, index }))
                                            {
                                                var sanitizedValue = item.value.PropertyName;

                                                <tr class="size-row @(item.index >= 5 ? "hidden" : "")">
                                                    <td>
                                                        @if (!string.IsNullOrEmpty(item.value.ImageUrl))
                                                        {
                                                            <img src="@item.value.ImageUrl" alt="@item.value.Value" class="img-product" />
                                                        }
                                                        else
                                                        {
                                                            <span>@item.value.Value</span>
                                                            // M  sm Large
                                                        }
                                                    </td>
                                                    <td>
                                                        <button class="quantity-btn"
                                                                onclick="adjustQuantity('@(sanitizedValue)','@(item.value.Value)','@item.value.Pid','@item.value.Vid','@(sanitizedValue)_@(item.index)', -1)"
                                                                data-item-id="@(sanitizedValue)_@(item.index)"
                                                                data-price="@Model.Product.Price.ConvertedPriceList.Internal.Price">
                                                            -
                                                        </button>
                                                        <span class="quantity-value" id="quantity_@(sanitizedValue)_@(item.index)">0</span>
                                                        <button class="quantity-btn"
                                                                onclick="adjustQuantity('@(sanitizedValue)','@(item.value.Value)','@item.value.Pid','@item.value.Vid','@(sanitizedValue)_@(item.index)',1)"
                                                                data-item-id="@(sanitizedValue)_@(item.index)"
                                                                data-price="@Model.Product.Price.ConvertedPriceList.Internal.Price">
                                                            +
                                                        </button>
                                                    </td>
                                                </tr>
                                            }

                                            <tr id="showMoreRow">
                                                <td>
                                                    <button id="showMoreBtn">إظهار المزيد</button>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>

                                    <div class="total-price-container">
                                        @* //toal price count more than 1 *@
                                        <p>
                                            @Localizer["TotalPrice"]:
                                            <span id="totalPrice">0.00</span>
                                            @Localizer["CoinSar"]

                                        </p>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                }





            </table>



            <div class="actions">
                @Html.AntiForgeryToken()

                @if (User.Identity.IsAuthenticated)
                {

                    var itemcart = Mapper.Map<CartItemDto>(Model.Product);


                    <button id="add-to-cart-btn" class="addToCart" data-itemCart="@Html.Raw(HttpUtility.HtmlAttributeEncode(JsonConvert.SerializeObject(itemcart)))">
                        @Localizer["AddBtnCart"]
                    </button>
                }
                else
                {

                    <button id="add-btn-alert" class="addToCart">
                        @Localizer["AddBtnCart"]
                    </button>
                }
            </div>
        </div>
    </section>

    <section class="OtherProduct">
        @if (Model.Product.RelatedGroups != null)
        {
            <section class="swiper-container container ">
                <h2>@Localizer["RelatedProduct"]</h2>
                <div class="swiper-wrapper">

                    @if (Model.Product.RelatedGroups != null)
                    {
                        @foreach (var item in Model.Product.RelatedGroups)
                        {

                            if (item.Type == "Recommendations")
                            {
                                @foreach (var productrelated in item.Items)
                                {
                                    <div class="swiper-slide">
                                        <div class="card" data-productid="@productrelated.Id">
                                            <div class="image-container">
                                                <img src="@productrelated.Image.Url"
                                                     alt="Product Image">
                                                <div class="overlay-buttons">
                                                </div>
                                            </div>
                                            <h3 class="title_product">@productrelated.Title</h3>
                                            <p>Sale: @productrelated.Price.ConvertedPriceList.Internal.Price Sar</p>
                                        </div>
                                    </div>

                                }

                            }


                        }
                    }



                </div>
                <!-- Add Navigation -->
                <div class="swiper-button-next"></div>
                <div class="swiper-button-prev"></div>
            </section>

        }

        <div class="productDetails">

            <!-- Sidebar -->
            <div class="sidebar-product">
                @if (Model != null && Model.Vendor != null)
                {
       
                    <div class="vendor-card">
                        <div class="vendor-header">
                            <h3>@Localizer["VendorInfoTitle"]</h3>
                        </div>
                        <div class="vendor-image">
                            <img src="@Model.Vendor.PictureUrl" alt="Vendor Image">
                        </div>
                        <div class="vendor-details">
                            <p><strong>@Localizer["NameLabel"]</strong> @Model.Vendor.Name</p>
                            <p><strong>@Localizer["ShopNameLabel"]</strong> @Model.Vendor.ShopName</p>
                            <p><strong>@Localizer["DeliveryScoreLabel"]</strong> @Model.Vendor.Scores.DeliveryScore</p>
                            <p><strong>@Localizer["ItemScoreLabel"]</strong> @Model.Vendor.Scores.ItemScore</p>
                            <p><strong>@Localizer["ServiceScoreLabel"]</strong> @Model.Vendor.Scores.ServiceScore</p>
                            <p><strong>@Localizer["RatingLabel"]</strong> @Model.Vendor.FeaturedValues.FirstOrDefault(e => e.Name == "stars")?.Value</p>
                            <p><strong>@Localizer["YearsOnMarketLabel"]</strong> @Model.Vendor.FeaturedValues.FirstOrDefault(e => e.Name == "years")?.Value</p>

                            @if (User.Identity.IsAuthenticated)
                            {
                                var userid = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value;
                                <input type="hidden" name="userId" value="@userid" />
                                <a href="@Url.Action("AddSallerToFavourit", "Product", new { userid, productId = Model.Product.Id, categoryName=Context.Request.Query["categoryName"], categoryId=Context.Request.Query["categoryId"] })" class="favorite-btn">
                                    @Localizer["AddToFavorites"]
                                </a>
                            }
                            <a asp-action="Search" asp-controller="Product" class="all-items-btn"
                               asp-route-vendorName="@Model.Vendor.Name" asp-route-vendorid="@Model.Vendor.Id">
                                @Localizer["AllItemsButton"]
                            </a>
                        </div>
                    </div>

                }


                <div class="other-items">
                    <h4>@Localizer["OtherItem"]</h4>
                    <div class="other-item">
                        @foreach (var vendoritem in Model.VendorItems.Content)
                        {
                            <a class="product-card" data-productid="@vendoritem.Id">
                                <img src="@vendoritem.MainPictureUrl"
                                     alt="Product 1" class="img-fluid">
                                <p>
                                    @vendoritem.Title
                                </p>
                                <div class="d-flex justify-content-between">
                                    <p>@vendoritem.MasterQuantity</p>
                                    <span class="price">@vendoritem.Price.ConvertedPriceList.Internal.Price SAR</span>
                                </div>
                            </a>



                        }



                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="main-content">
                <div class="tabs">
                    <div class="tab active" data-tab="description">@Localizer["Description"]</div>
                    <div class="tab" data-tab="properties">@Localizer["Properties"] </div>
                    <div class="tab" data-tab="reviews">@Localizer["Reviews"]</div>
                </div>

                <!-- Description Tab -->
                <div class="tab-content active description-content" id="description">
                    @if (Model.Product.Description != null)
                    {
                        @Html.Raw(Model.Product.Description)
                    }
                </div>

                <!-- Properties Tab -->
                <div class="tab-content" id="properties">
                    <table class="properties-table">
                        @if (Model.Product.Attributes != null)
                        {

                            var listOfAllAttributes = Model.Product.Attributes.Select(e => e.PropertyName).Distinct().ToList();
                            foreach (var attr in listOfAllAttributes)
                            {
                                <tr>
                                    <td>@attr</td>
                                    <td class="Atrributes_style">
                                        @foreach (var attriner in Model.Product.Attributes.Where(e => e.PropertyName == attr))
                                        {
                                            <span>@attriner.Value</span>
                                        }
                                    </td>


                                </tr>
                            }


                        }


                    </table>
                </div>

                <!-- Reviews Tab -->
                <div class="tab-content" id="reviews">
                    <div class="reviews-container">
                        <div class="container my-4">
                            <h4 class="mb-3">Product Reviews</h4>
                            @foreach (var review in Model.Reviews.Content)
                            {
                                <div class="review-card p-3 mb-3 shadow-sm rounded">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            <div class="user-avatar me-2">
                                                <span>@review.UserNick</span>
                                            </div>
                                            <div>
                                                <strong class="rating">@(new string('★', review.Rating))</strong>
                                                <small class="text-muted ms-2">@review.CreatedDate.ToString("MMM dd, yyyy")</small>
                                            </div>
                                        </div>
                                        <span class="badge bg-secondary">@review.FeaturedValues.FirstOrDefault(f => f.Name == "raterLevel")?.Value</span>
                                    </div>
                                    <p class="mt-2">@review.Content</p>
                                    @if (review.Images?.Count > 0)
                                    {
                                        <div class="review-images d-flex gap-2 mt-2">
                                            @foreach (var img in review.Images)
                                            {
                                                <img src="@img" alt="Review Image" class="rounded" width="80" height="80">
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </section>

</div>

@section ProductDetalsScript {
    <script src="~/js/ProductDetials.js">


    </script>



}